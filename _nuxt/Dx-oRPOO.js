import{aC as C,r as f,aD as w,aE as b,aF as O,a as m,Z as B,k as E,aG as z,E as M,as as H}from"./xKfPub33.js";const R=e=>e==="defer"||e===!1;function K(...e){var h;const r=typeof e[e.length-1]=="string"?e.pop():void 0;typeof e[0]!="string"&&e.unshift(r);let[t,l,a={}]=e;if(typeof t!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof l!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const s=E(),_=l,v=()=>null,p=()=>s.isHydrating?s.payload.data[t]:s.static.data[t];a.server=a.server??!0,a.default=a.default??v,a.getCachedData=a.getCachedData??p,a.lazy=a.lazy??!1,a.immediate=a.immediate??!0,a.deep=a.deep??C.deep,a.dedupe=a.dedupe??"cancel";const d=()=>a.getCachedData(t,s)!=null;if(!s._asyncData[t]||!a.immediate){(h=s.payload._errors)[t]??(h[t]=null);const o=a.deep?f:w;s._asyncData[t]={data:o(a.getCachedData(t,s)??a.default()),pending:f(!d()),error:b(s.payload._errors,t),status:f("idle")}}const n={...s._asyncData[t]};n.refresh=n.execute=(o={})=>{if(s._asyncDataPromises[t]){if(R(o.dedupe??a.dedupe))return s._asyncDataPromises[t];s._asyncDataPromises[t].cancelled=!0}if((o._initial||s.isHydrating&&o._initial!==!1)&&d())return Promise.resolve(a.getCachedData(t,s));n.pending.value=!0,n.status.value="pending";const u=new Promise((i,c)=>{try{i(_(s))}catch(P){c(P)}}).then(async i=>{if(u.cancelled)return s._asyncDataPromises[t];let c=i;a.transform&&(c=await a.transform(i)),a.pick&&(c=F(c,a.pick)),s.payload.data[t]=c,n.data.value=c,n.error.value=null,n.status.value="success"}).catch(i=>{if(u.cancelled)return s._asyncDataPromises[t];n.error.value=z(i),n.data.value=M(a.default()),n.status.value="error"}).finally(()=>{u.cancelled||(n.pending.value=!1,delete s._asyncDataPromises[t])});return s._asyncDataPromises[t]=u,s._asyncDataPromises[t]},n.clear=()=>j(s,t);const y=()=>n.refresh({_initial:!0}),g=a.server!==!1&&s.payload.serverRendered;{const o=H();if(o&&!o._nuxtOnBeforeMountCbs){o._nuxtOnBeforeMountCbs=[];const i=o._nuxtOnBeforeMountCbs;o&&(O(()=>{i.forEach(c=>{c()}),i.splice(0,i.length)}),m(()=>i.splice(0,i.length)))}g&&s.isHydrating&&(n.error.value||d())?(n.pending.value=!1,n.status.value=n.error.value?"error":"success"):o&&(s.payload.serverRendered&&s.isHydrating||a.lazy)&&a.immediate?o._nuxtOnBeforeMountCbs.push(y):a.immediate&&y(),a.watch&&B(a.watch,()=>n.refresh());const u=s.hook("app:data:refresh",async i=>{(!i||i.includes(t))&&await n.refresh()});o&&m(u)}const D=Promise.resolve(s._asyncDataPromises[t]).then(()=>n);return Object.assign(D,n),D}function T(...e){const r=typeof e[e.length-1]=="string"?e.pop():void 0;typeof e[0]!="string"&&e.unshift(r);const[t,l,a={}]=e;return K(t,l,{...a,lazy:!0},null)}function j(e,r){r in e.payload.data&&(e.payload.data[r]=void 0),r in e.payload._errors&&(e.payload._errors[r]=null),e._asyncData[r]&&(e._asyncData[r].data.value=void 0,e._asyncData[r].error.value=null,e._asyncData[r].pending.value=!1,e._asyncData[r].status.value="idle"),r in e._asyncDataPromises&&(e._asyncDataPromises[r].cancelled=!0,e._asyncDataPromises[r]=void 0)}function F(e,r){const t={};for(const l of r)t[l]=e[l];return t}export{K as a,T as u};
